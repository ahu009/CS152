func fibonacci
. _k
. _k
. _tempvar_0
. _tempvar_1
. _tempvar_2
. _tempvar_3
. _tempvar_4
. _tempvar_5
. _tempvar_6
. _tempvar_7
. _tempvar_8
. _tempvar_9
. _tempvar_10
. _tempvar_11
. _tempvar_12
= _k, $0
= _k, $1
= _tempvar_0, _k
= _tempvar_1, 1
<= _tempvar_2, _tempvar_0, _tempvar_1
?:= if_condition_true__labelvar_0, _tempvar_2
:= if_condition_false__labelvar_0
: if_condition_true__labelvar_0
= _tempvar_3, 1
ret _tempvar_3
: if_condition_false__labelvar_0
= _tempvar_4, _k
= _tempvar_5, 1
- _tempvar_6, _tempvar_4, _tempvar_5
param _tempvar_6
call fibonacci, _tempvar_7
= _tempvar_8, _k
= _tempvar_9, 2
- _tempvar_10, _tempvar_8, _tempvar_9
param _tempvar_10
call fibonacci, _tempvar_11
+ _tempvar_12, _tempvar_7, _tempvar_11
ret _tempvar_12
endfunc
semanticError!
func ppooop
. _n
.[] _t, 20
.[] _mep, 0
. _r
. _chicken
. _fib_n
. _tempvar_13
. _tempvar_14
. _tempvar_15
. _tempvar_16
. _tempvar_17
. _tempvar_18
. _tempvar_19
. _tempvar_20
. _tempvar_21
.< _n
.< _ejkalce
= _tempvar_13, _elkacjew
= _ecaew, _tempvar_13
= _tempvar_14, _n
= _t, _tempvar_14
= _tempvar_15, _n
= _tempvar_16, _n
[]= _r, _tempvar_15, _tempvar_16
= _tempvar_17, _n
param _tempvar_17
call testing, _tempvar_18
= _n, _tempvar_18
= _tempvar_19, _n
param _tempvar_19
call fibonacci, _tempvar_20
= _fib_n, _tempvar_20
= _tempvar_21, _fib_n
.> _tempvar_21
endfunc
semanticError!
